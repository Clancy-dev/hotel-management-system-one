// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Room {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  roomNumber  String   @unique
  categoryId  String   @db.ObjectId
  price       Float
  description String
  images      String[]
  
  // Policy-specific pricing
  standardPolicy StandardPolicyData?
  customPolicy   CustomPolicyData?
  mixedPolicy    MixedPolicyData?
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  category RoomCategory? @relation(fields: [categoryId], references: [id])
}

model RoomCategory {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  rooms Room[]
}

// Standard Policy Data Structure
type StandardPolicyData {
  basePrice         Float
  checkInStart      String  // "12:00"
  checkInEnd        String  // "14:00"
  checkOutStart     String  // "10:00"
  checkOutEnd       String  // "11:00"
  nightStart        String  // "12:00"
  nightEnd          String  // "10:00"
  lateCheckOutRates LateCheckOutRate[]
  earlyCheckInRates EarlyCheckInRate[]
}

type LateCheckOutRate {
  id          String
  startTime   String  // "11:00"
  endTime     String  // "16:00"
  charge      Float
  description String?
}

type EarlyCheckInRate {
  id          String
  startTime   String  // "08:00"
  endTime     String  // "12:00"
  charge      Float
  description String?
}

// Custom Policy Data Structure
type CustomPolicyData {
  baseHours         Int
  pricePerHour      Float
  overtimeRates     OvertimeRate[]
  earlyCheckOutRate Float?
}

type OvertimeRate {
  id          String
  afterHours  Int     // After how many hours
  upToHours   Int?    // Up to how many hours (optional)
  charge      Float
  description String?
}

// Mixed Policy Data Structure
type MixedPolicyData {
  standardPolicy StandardPolicyData
  customPolicy   CustomPolicyData
  defaultMode    String // "standard" | "custom"
}
